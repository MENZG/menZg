spring.application.name=menzg-backend
# H2 Database configuration

spring.h2.console.enabled= true
spring.datasource.url= jdbc:h2:mem:testdb
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.datasource.username=sa



spring.security.oauth2.client.registration.google.scope= profile, email

# ovo je za lokalni razvoj
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

# ovo bi trebao biti URI koji Google koristi za preusmjeravanje nakon autentifikacije
spring.security.oauth2.client.registration.google.redirect-uri=https://backendservice-xspx.onrender.com/api/login/oauth2/code/google



spring.security.csrf.enabled=false
spring.datasource.driver-class-name=org.h2.Driver
spring.security.headers.frame-options.disable=true



#progi.fronted.url=http://localhost:5173
   # 
   
progi.frontend.url=https://frontendservice-l0s1.onrender.com
# https://backendservice-xspx.onrender.com

# Port na kojem ce se vrtiti api
# Obavezno izloziti, ovu varijablu koristi Render
server.port=${PORT:8080}

# Korijenska putanja ("prefiks") za sve zahtjeve na backend - preporuca se postaviti ovo zbog proxy konfiguracije
# Ako je npr. u controlleru navedena putanja /test, moci ce joj se pristupiti pomocu putanje /api/test
server.servlet.context-path=/api

# Google OAuth2 configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}


spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
##za bacanje stare h2 baze
#spring.jpa.hibernate.ddl-auto=create-drop

#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# PostgreSQL configuration (for production, uncomment and update values)
#spring.datasource.url=jdbc:postgresql://localhost:5432/ime_baze
#spring.datasource.username=korisnicko_ime
#spring.datasource.password=lozinka
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.output.ansi.enabled=ALWAYS


# ovo pokrece data.sql
spring.jpa.defer-datasource-initialization = true


# Omogu\u0107ite prikaz SQL upita
spring.jpa.show-sql=true

# Opcionalno, omogu\u0107ite formatiranje SQL upita
spring.jpa.properties.hibernate.format_sql=true

# Opcionalno, prika\u017Eite parametre upita (korisno za debugiranje)
spring.jpa.properties.hibernate.use_sql_comments=true